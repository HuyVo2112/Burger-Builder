{"version":3,"sources":["store/actions/actionTypes.js","store/actions/burgerBuilders.js","store/actions/order.js","store/actions/auth.js","axios-orders.js","components/Burger/BurgerIngredients/BurgerIngredient.module.css","hoc/Auxilary/Auxilary.js","components/UI/Button/Button.js","components/UI/Spinner/Spinner.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","hoc/withErrorHandler/withErrorHandler.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/UI/Button/Button.module.css","components/UI/Modal/Modal.js","components/Burger/BurgerIngredients/BurgerIngredient.js","components/Burger/Burger.js","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/UI/Spinner/Spinner.module.css","components/UI/Modal/Modal.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","hoc/asyncComponent/asyncComponent.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilders.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENT","SET_ERROR","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","addIngredient","payload","type","actionTypes","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","setError","purchaseBurger","orderData","token","post","console","log","id","orderId","purchaseBurgerSuccess","name","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParams","orders","fetchedOrders","key","push","err","authSuccess","tokenId","logout","localStorage","removeItem","authLogout","expiresIn","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","url","expiryDate","Date","getTime","setItem","localId","idToken","message","authFail","setAuthRedirectPath","path","authSetState","getItem","timeDiff","instance","create","baseURL","module","exports","Auxilary","props","children","Button","disabled","className","classes","btnType","join","onClick","clicked","Spinner","Loader","withErrorHandler","WrappedElement","state","errorConfirmedHandler","setState","this","reqInterceptor","interceptors","request","use","req","resInterceptor","res","eject","show","modalClosed","Component","Backdrop","Modal","nextProps","nextState","style","transform","opacity","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Burger","transformedIngredients","Object","keys","map","igKey","Array","_","reduce","arr","el","concat","length","Logo","src","burgerLogo","alt","NavigationItem","exact","activeClassName","active","to","link","NavigationItems","isAuthenticated","DrawerToggle","Toolbar","drawerToggleClicked","DesktopOnly","SideDrawer","someClasses","open","Open","Close","closed","Layout","showSideDrawer","sideDrawerClosedHandler","sideDrawerOpenedHandler","prevState","Content","connect","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","valid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","onChangeHandler","options","option","displayValue","Input","Label","label","ContactData","orderForm","placeholder","validation","required","street","zipCode","minLength","maxLength","country","deliveryMethod","event","inputType","tempOrderForm","tempOrderElement","target","checkValidity","formValid","property","hasOwnProperty","orderHandler","preventDefault","formData","formElement","loading","order","price","totalPrice","toFixed","burgerSuccessHandler","rules","isValid","undefined","trim","formElementsArray","config","content","onSubmit","burger","Checkout","cancelCheckoutHandler","history","goBack","continueCheckoutHandler","replace","summary","purchasedRedirect","donePurchase","match","component","ingredientList","ingredientName","amount","ingredientOutput","display","textTransform","padding","border","Order","Number","Orders","fetchOrdersHandler","actions","Auth","controls","isEmail","switchAuthModeHandler","inputChangedHandler","controlName","updatedControls","submitHandler","authHandler","building","setAuthRedirectPathHandler","test","formElements","errorMessage","authRedirectPath","Logout","logoutHandler","AsyncBurgerBuilder","importComponent","cmp","default","C","asyncComponent","App","authSetStateHandler","routes","textAlign","Boolean","window","location","hostname","updateObject","oldState","changedProperties","INGREDIENT_PRICES","salad","cheese","meat","bacon","initialState","action","updatedIngredient","updatedIngredients","updatedState","updatedIng","updatedIngs","updatedSt","setIngredients","newPrice","burgerReducer","newOrder","purchaseBurgerStart","fetchOrdersStart","fetchOrdersFail","fetchOrdersSuccess","orderReducer","authStart","reducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a428e34.chunk.js","sourcesContent":["export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\r\nexport const SET_INGREDIENT = \"SET_INGREDIENT\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\n\r\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\r\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\r\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\";\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\r\n\r\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\";\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\r\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\";\r\n\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";\r\n\r\nexport const AUTH_SET_STATE = \"AUTH_SET_STATE\";","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const addIngredient = (payload) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (payload) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nconst setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENT,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nconst setError = (error) => {\r\n    return {\r\n        type: actionTypes.SET_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return (dispatch) => {\r\n\r\n        axios.get(\"/ingredients.json\")\r\n            .then(response => {   \r\n                dispatch(setIngredients(response.data)) ;\r\n            })\r\n            .catch(error => dispatch(setError(error)))\r\n    }\r\n}\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    }\r\n\r\n}\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n    \r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START,\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post(\"/orders.json?auth=\" + token, orderData)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData))\r\n                \r\n            })\r\n            .catch(error => dispatch(purchaseBurgerFail(error)));\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT,\r\n    }\r\n}\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = \"?auth=\" + token + \"&orderBy=\\\"userId\\\"&equalTo=\\\"\" + userId + \"\\\"\"\r\n        console.log(queryParams);\r\n        axios.get(\"https://react-my-burger-11efd.firebaseio.com/orders.json\" + queryParams )\r\n            .then(response => {\r\n                let fetchedOrders = [];\r\n                console.log(response);\r\n                for (let key in response.data) {\r\n                    fetchedOrders.push({\r\n                        ...response.data[key],\r\n                        id: key\r\n                    })  \r\n                }\r\n                console.log(fetchedOrders)\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err));\r\n            })\r\n    }\r\n}\r\n\r\n\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START,\r\n    }\r\n}\r\n\r\nexport const authSuccess = (tokenId, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        tokenId: tokenId,\r\n        userId: userId,\r\n    }\r\n}\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error,\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"userId\");\r\n    localStorage.removeItem(\"expiryDate\");\r\n\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT,\r\n    }\r\n}\r\n\r\nexport const authLogout = (expiresIn) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expiresIn)\r\n    }\r\n}\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true,\r\n        }\r\n    \r\n\r\n        //Sign up URL\r\n        let url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAbiP7HxlMpgSWd1zw1S_CTepkCgOTJ_WU\"\r\n\r\n        if (!isSignup) {\r\n            //Sign in URL\r\n            url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAbiP7HxlMpgSWd1zw1S_CTepkCgOTJ_WU\";\r\n        }\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                console.log(response);\r\n                const expiryDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem(\"userId\", response.data.localId);\r\n                localStorage.setItem(\"token\", response.data.idToken);\r\n                localStorage.setItem(\"expiryDate\", expiryDate)\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(authLogout(response.data.expiresIn*1000));\r\n            })\r\n            .catch( error => {\r\n                console.log(error.response.data.error.message);\r\n                dispatch(authFail(error.response.data.error));\r\n            })\r\n    }\r\n}\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path:  path,\r\n    }\r\n}\r\n\r\nexport const authSetState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem(\"token\")\r\n        if (token != null) {\r\n            const expiryDate = new Date(localStorage.getItem(\"expiryDate\"));\r\n\r\n            const timeDiff = expiryDate.getTime() - new Date().getTime();\r\n            if (timeDiff > 0) {\r\n                const userId = localStorage.getItem(\"userId\");\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(authLogout(timeDiff));\r\n            }\r\n            else {\r\n                dispatch(logout());\r\n            }\r\n        }\r\n        else {\r\n            dispatch(logout());\r\n        }\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://react-my-burger-11efd.firebaseio.com/\",\r\n})\r\n\r\nexport default instance;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__MTWN9\",\"BreadTop\":\"BurgerIngredient_BreadTop__2Zagr\",\"Seeds1\":\"BurgerIngredient_Seeds1__lYR4z\",\"Seeds2\":\"BurgerIngredient_Seeds2__2EGcv\",\"Meat\":\"BurgerIngredient_Meat__vuapu\",\"Cheese\":\"BurgerIngredient_Cheese__3ZwUR\",\"Salad\":\"BurgerIngredient_Salad__1sxCb\",\"Bacon\":\"BurgerIngredient_Bacon__28AIO\"};","const Auxilary = (props) => props.children;\r\n\r\nexport default Auxilary;","import React from \"react\";\r\nimport classes from \"./Button.module.css\"\r\n\r\nconst Button = (props) => (\r\n    <button\r\n        disabled={props.disabled} \r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\n\r\n\r\nexport default Button;","import React from \"react\";\r\nimport classes from \"./Spinner.module.css\";\r\n\r\nconst Spinner = (props) => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default Spinner;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2zDqF\",\"Open\":\"SideDrawer_Open__wdlSJ\",\"Close\":\"SideDrawer_Close__TnktA\",\"Logo\":\"SideDrawer_Logo__1Du1e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3AQBU\",\"Label\":\"Input_Label__2fraW\",\"InputElement\":\"Input_InputElement__2L6Cy\",\"Invalid\":\"Input_Invalid__3h-Mx\"};","import React, { Component } from \"react\";\r\n\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport Auxilary from \"../Auxilary/Auxilary\";\r\n\r\nconst withErrorHandler = (WrappedElement, axios) => {\r\n    return class extends Component {\r\n\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n\r\n        componentWillMount() {\r\n            this.reqInterceptor = axios.interceptors.request.use( req => {\r\n                this.setState({error: null})\r\n                return req;\r\n            })\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error})\r\n            })\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            console.log(\"Will Unmount\", this.resInterceptor, this.reqInterceptor)\r\n            axios.interceptors.request.eject(this.reqInterceptor)\r\n            axios.interceptors.response.eject(this.resInterceptor)\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({\r\n                error: null\r\n            })\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Auxilary>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedElement {...this.props}/>\r\n                </Auxilary>\r\n            )\r\n        }\r\n    } \r\n}\r\n\r\nexport default withErrorHandler;","import React from \"react\";\r\nimport classes from \"./Backdrop.module.css\";\r\n\r\nconst Backdrop = (props) => (\r\n    props.show ? <div onClick={props.clicked} className={classes.Backdrop}></div> : null\r\n)\r\n\r\nexport default Backdrop;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2lT79\",\"Logo\":\"Toolbar_Logo__2Uke2\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1vXkL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__8xvMJ\",\"active\":\"NavigationItem_active__JV_Cx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__SkcEm\",\"Success\":\"Button_Success__2UWXE\",\"Danger\":\"Button_Danger__1WYYY\"};","import React, { Component } from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\nimport Auxilary from \"../../../hoc/Auxilary/Auxilary\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        \r\n        return (this.props.show !== nextProps.show || this.props.children !== nextProps.children) ;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Auxilary >\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n                <div \r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n                        opacity: this.props.show ? \"1\" : \"0\"\r\n                        \r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Auxilary>\r\n        )\r\n    }\r\n}\r\n   \r\n\r\nexport default Modal;","import React, { Component } from \"react\";\r\nimport classes from \"./BurgerIngredient.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass BurgerIngredient extends Component {\r\n    render() {\r\n        let ingredient = null;\r\n\r\n        switch(this.props.type) {\r\n            case(\"bread-bottom\"):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case(\"bread-top\"):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div> \r\n                    </div>\r\n                );\r\n                break;\r\n            case(\"meat\"):\r\n                ingredient = <div className={classes.Meat}></div>\r\n                break;\r\n            case(\"cheese\"):\r\n                ingredient = <div className={classes.Cheese}></div>\r\n                break;\r\n            case(\"salad\"):\r\n                ingredient = <div className={classes.Salad}></div>\r\n                break;\r\n            case(\"bacon\"):\r\n                ingredient = <div className={classes.Bacon}></div>\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n    \r\n        return ingredient;\r\n    }\r\n\r\n};\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n} \r\n\r\nexport default BurgerIngredient;","import React from \"react\";\r\nimport BurgerIngredient from \"./BurgerIngredients/BurgerIngredient\";\r\nimport classes from \"./Burger.module.css\";\r\n\r\nconst Burger = (props) => {\r\n\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return [...Array(props.ingredients[igKey])].map((_,id) => {\r\n                return <BurgerIngredient key={id+igKey} type={igKey} />\r\n            })\r\n            }    \r\n        )\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el)\r\n        }, []);\r\n\r\n    if (!transformedIngredients.length) {\r\n        transformedIngredients = <p>Please start adding ingredients</p>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Burger;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__1EpBw\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3pAD1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3d44l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__aksxw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2PUhT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2pE7H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__2FBDv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1JhYj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__OwFTt\",\"load6\":\"Spinner_load6__3MKTe\",\"round\":\"Spinner_round__1obNV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3oZDc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__2EiBp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3wKsr\"};","import React from \"react\";\r\nimport burgerLogo from \"../../assets/images/burger-logo.png\";\r\nimport classes from \"./Logo.module.css\"\r\n\r\nconst Logo = (props)=> (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt=\"MyBurger\"/>\r\n    </div>\r\n);\r\n\r\nexport default Logo;","    \r\nimport React from \"react\";\r\nimport classes from \"./NavigationItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst NavigationItem = (props) => (\r\n    <li onClick={props.clicked} className={classes.NavigationItem}>\r\n        <NavLink exact activeClassName={classes.active} to={props.link}>{props.children}</NavLink>\r\n    </li>\r\n)\r\n\r\nexport default NavigationItem;","import React from \"react\";\r\nimport classes from \"./NavigationItems.module.css\";\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\n\r\nconst NavigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem clicked={props.clicked} link=\"/\">Burger Builder</NavigationItem>\r\n        {props.isAuthenticated ? <NavigationItem clicked={props.clicked} link=\"/orders\">Orders</NavigationItem> : null }\r\n        {props.isAuthenticated \r\n            ? <NavigationItem clicked={props.clicked} link=\"/logout\">Logout</NavigationItem>\r\n            : <NavigationItem clicked={props.clicked} link=\"/auth\">Authenticate</NavigationItem>}\r\n    </ul>\r\n);\r\n\r\nexport default NavigationItems;","import React from \"react\";\r\nimport classes from \"./DrawerToggle.module.css\"\r\n\r\nconst DrawerToggle = (props) => (\r\n    <div onClick={props.clicked} className={classes.DrawerToggle}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n)\r\n\r\nexport default DrawerToggle;","import React from \"react\";\r\nimport classes from \"./Toolbar.module.css\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\"\r\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\r\n\r\nconst Toolbar =(props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked}></DrawerToggle>\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        \r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuthenticated}/>\r\n        </nav>\r\n    </header>\r\n)\r\n\r\nexport default Toolbar;","import React from \"react\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport classes from \"./SideDrawer.module.css\";\r\nimport Auxilary from \"../../../hoc/Auxilary/Auxilary\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\n\r\nconst SideDrawer = (props) => {\r\n\r\n    const someClasses = [classes.SideDrawer];\r\n\r\n\r\n    if (props.open) {\r\n        someClasses.push(classes.Open);\r\n    } else {\r\n        someClasses.push(classes.Close);\r\n    }\r\n\r\n    return (\r\n        <Auxilary>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={someClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n            \r\n                <nav>\r\n                    <NavigationItems clicked={props.closed}/>\r\n                </nav>\r\n            </div>\r\n        </Auxilary>\r\n        \r\n    );\r\n}\r\n\r\nexport default SideDrawer;","import React, {Component} from 'react';\r\nimport Auxilary from \"../Auxilary/Auxilary\";\r\nimport classes from \"./Layout.module.css\";\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\r\n\r\nimport { connect } from \"react-redux\";\r\nclass Layout extends Component {  \r\n\r\n    state = {\r\n        showSideDrawer: false,\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({\r\n            showSideDrawer: false,\r\n        })\r\n    }\r\n\r\n    sideDrawerOpenedHandler = () => {\r\n        this.setState((prevState) => ({\r\n            showSideDrawer: !prevState.showSideDrawer,\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Auxilary>\r\n                <Toolbar  \r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                    drawerToggleClicked={this.sideDrawerOpenedHandler}/>\r\n                <SideDrawer\r\n                    isAuthenticated={this.props.isAuthenticated} \r\n                    open={this.state.showSideDrawer} \r\n                    closed={this.sideDrawerClosedHandler}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Auxilary>\r\n        )\r\n    }\r\n    \r\n    \r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.auth.tokenId !== null,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n\r\n","import React from \"react\";\r\nimport Burger from \"../../Burger/Burger\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport classes from \"./CheckoutSummary.module.css\"\r\n\r\nconst checkoutSummary = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width: \"100%\", margin: \"auto\"}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>Cancel</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>Success</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default checkoutSummary;","import React from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (!props.valid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n\r\n    switch(props.elementType) {\r\n        case \"input\":\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value ={props.value}\r\n                onChange={props.onChangeHandler} />;\r\n            break;\r\n        case \"textarea\":\r\n            inputElement = <textarea \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value ={props.value}\r\n                onChange={props.onChangeHandler} />;\r\n            break;\r\n        case \"select\":\r\n            inputElement = <select className={inputClasses.join(' ')} value={props.value} onChange={props.onChangeHandler}>\r\n                {props.elementConfig.options.map(option =>(\r\n                    <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                ))}\r\n\r\n            </select>\r\n            break;\r\n        default:\r\n            inputElement = <input  \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value ={props.value}\r\n                onChange={props.onChangeHandler}/>;\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default input;","import React, { Component} from \"react\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport classes from \"./ContactData.module.css\";\r\nimport axios from \"../../../axios-orders\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nimport Input from \"../../../components/UI/Input/Input\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../../../store/actions/index\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\n\r\nclass ContactData extends Component {\r\n    state={\r\n        orderForm: {\r\n          \r\n            name: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"text\",\r\n                    placeholder: \"Your Name\",\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n                    \r\n            street: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"text\",\r\n                    placeholder: \"Your Street\",\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            zipCode: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"text\",\r\n                    placeholder: \"Your Zip Code\",\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            country: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"text\",\r\n                    placeholder: \"Your Country\",\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },   \r\n            email: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"email\",\r\n                    placeholder: \"Your Email\",\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            deliveryMethod: {\r\n                elementType: \"select\",\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: \"fastest\", displayValue:  \"Fastest\"},\r\n                        {value: \"cheapest\", displayValue:  \"Cheapest\"}\r\n                    ]\r\n                },\r\n                value: \"fastest\"\r\n            },\r\n        },\r\n        valid: false,\r\n    }\r\n\r\n\r\n    checkValidity (value, rules){\r\n        let isValid = true;\r\n\r\n        if (rules === undefined) {\r\n            return true;\r\n        }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== \"\" && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid; \r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid; \r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    onChangeHandler = (event, inputType) => {\r\n        const tempOrderForm = {...this.state.orderForm};\r\n        const tempOrderElement = {...tempOrderForm[inputType]}\r\n        tempOrderElement.value = event.target.value;\r\n        tempOrderElement.valid = this.checkValidity(tempOrderElement.value, tempOrderElement.validation);\r\n        tempOrderElement.touched = true;\r\n        \r\n        \r\n        tempOrderForm[inputType] = tempOrderElement;\r\n        let formValid = true;\r\n        for (let property in tempOrderForm) {\r\n            if (tempOrderForm[property].hasOwnProperty(\"validation\")) {\r\n                formValid = tempOrderForm[property].valid && formValid;\r\n            }\r\n            \r\n        }\r\n        this.setState({\r\n            orderForm: tempOrderForm,\r\n            valid: formValid,\r\n        })  \r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        console.log(this.props.ingredients);\r\n\r\n        const formData = {};\r\n\r\n        for (let formElement in this.state.orderForm) {\r\n            formData[formElement] = this.state.orderForm[formElement].value;\r\n        }\r\n\r\n        this.setState({loading: true});\r\n        const order = {\r\n            ingredients: this.props.ingredients,\r\n            price: this.props.totalPrice.toFixed(2),\r\n            orderData: formData,\r\n            userId: this.props.userId,\r\n        }\r\n        console.log(this.props.token);\r\n        this.props.burgerSuccessHandler(order, this.props.token);\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        const formElementsArray = [];\r\n\r\n        for (let input in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: input,\r\n                config: this.state.orderForm[input]\r\n            })\r\n        }\r\n\r\n        let content = <div className={classes.ContactData}>\r\n            <h4>Enter your Contact Data</h4>    \r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(input => (\r\n                    <Input \r\n                        key={input.id}\r\n                        elementType={input.config.elementType}\r\n                        elementConfig={input.config.elementConfig}\r\n                        value={input.config.value}\r\n                        onChangeHandler={(event) => this.onChangeHandler(event, input.id)}\r\n                        shouldValidate={input.config.validation}\r\n                        valid={input.config.valid}\r\n                        touched={input.config.touched}/>\r\n                ))}\r\n                <Button disabled={!this.state.valid} btnType=\"Success\">ORDER</Button>\r\n            </form>\r\n        </div>\r\n        return ( \r\n            this.props.loading ? <Spinner  /> : content\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.burger.ingredients,\r\n        totalPrice: state.burger.totalPrice,\r\n        loading: state.order.loading,\r\n        token: state.auth.tokenId,\r\n        userId: state.auth.userId,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>  {\r\n    return {\r\n        burgerSuccessHandler: (orderData, token) => dispatch(actionTypes.purchaseBurger(orderData, token))\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from \"react\";\r\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport ContactData from \"./ContactData/ContactData\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Checkout extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n        // const query = new URLSearchParams(this.props.location.search);\r\n        // const tempIngredients = {};\r\n        // let tempPrice;\r\n\r\n        // for(let param of query.entries()) {\r\n        //     if (this.props.ingredients.hasOwnProperty(param[0])) {\r\n        //         tempIngredients[param[0]] = Number(param[1]);\r\n        //     }\r\n        //     if (param[0] === \"totalPrice\") {\r\n        //         tempPrice = Number(param[1]);\r\n        //     }\r\n\r\n        // }\r\n\r\n\r\n        // this.setState({\r\n        //     ingredients: tempIngredients,\r\n        //     totalPrice: tempPrice,\r\n        // })\r\n\r\n    }\r\n\r\n    cancelCheckoutHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    continueCheckoutHandler = () => {\r\n        this.props.history.replace(\"/checkout/contact-data\");\r\n    }\r\n\r\n    render() {\r\n        console.log(\"hello\");\r\n        let summary = <Redirect to=\"/\"></Redirect>\r\n        \r\n        if (this.props.ingredients) {\r\n            let purchasedRedirect = this.props.donePurchase ? <Redirect to=\"/\"></Redirect> : null;\r\n\r\n            summary = <div>\r\n                {purchasedRedirect}\r\n                <CheckoutSummary\r\n                    ingredients={this.props.ingredients}\r\n                    checkoutCancelled={this.cancelCheckoutHandler}\r\n                    checkoutContinued={this.continueCheckoutHandler} />\r\n                <Route\r\n                    path={this.props.match.path + \"/contact-data\"}\r\n                    component={ContactData} />\r\n            </div>\r\n        }\r\n        return summary;\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.burger.ingredients,\r\n        donePurchase: state.order.donePurchase,\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from \"react\"\r\nimport classes from \"./Order.module.css\"\r\n\r\nconst order = (props) => {\r\n\r\n    let ingredientList = [];\r\n\r\n    for(let ingredientName in props.ingredients) {\r\n        ingredientList.push({\r\n            name: ingredientName,\r\n            amount: props.ingredients[ingredientName],\r\n\r\n\r\n        })\r\n    }\r\n\r\n    let ingredientOutput = ingredientList.map(ingredient => <span style={\r\n        {\r\n            display: \"inline-block\",\r\n            textTransform: \"capitalize\",\r\n            padding: \"5px\",\r\n            margin: \"0 8px\",\r\n            border: \"1px solid #ccc\"\r\n        }\r\n    }>({ingredient.name}) ({ingredient.amount})</span>);\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n    \r\n\r\n}\r\n\r\n    \r\n\r\n\r\n\r\nexport default order;","import React, { Component } from \"react\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nclass Orders extends Component {\r\n\r\n    \r\n\r\n    componentDidMount() {\r\n        this.props.fetchOrdersHandler(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.loading ? <Spinner /> : null}\r\n                {this.props.orders.map(order => <Order key={order.id} ingredients={order.ingredients} price={order.price} />)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateWithProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.tokenId,\r\n        userId: state.auth.userId,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchOrdersHandler: (token, userId) => dispatch(actions.fetchOrders(token, userId)),\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateWithProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Orders from \"../Orders/Orders\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport classes from \"./Auth.module.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Auth extends Component {\r\n\r\n    state =  {\r\n        controls: {\r\n            email: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"email\",\r\n                    placeholder: \"Email\",\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            password: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"password\",\r\n                    placeholder: \"Password\",\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            }\r\n        },\r\n        isSignup: true,\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.building) {\r\n            this.props.setAuthRedirectPathHandler();\r\n        }\r\n    }\r\n\r\n    checkValidity (value, rules) {\r\n        let isValid = true;\r\n\r\n        if (rules === undefined) {\r\n            return true;\r\n        }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== \"\" && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid; \r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            let regEx = /^[\\w-.]+@([\\w-]+.)+[\\w-]{2,4}$/;\r\n            isValid = regEx.test(value) && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid; \r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {isSignup: !prevState.isSignup}\r\n        })\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            controls: updatedControls\r\n        })\r\n    } \r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        \r\n        this.props.authHandler(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\r\n    } \r\n\r\n    render() {\r\n\r\n        const formElementsArray = [];\r\n\r\n        for (let input in this.state.controls) {\r\n            formElementsArray.push({\r\n                id: input,\r\n                config: this.state.controls[input]\r\n            })\r\n        }\r\n\r\n        let formElements = formElementsArray.map(input => (\r\n            <Input \r\n                key={input.id}\r\n                elementType={input.config.elementType}\r\n                elementConfig={input.config.elementConfig}\r\n                value={input.config.value}\r\n                onChangeHandler={(event) => this.inputChangedHandler(event, input.id)}\r\n                shouldValidate={input.config.validation}\r\n                valid={input.config.valid}\r\n                touched={input.config.touched}/>\r\n        ))\r\n\r\n\r\n        let errorMessage = null;\r\n\r\n        if (this.props.error) {\r\n            errorMessage = this.props.error.message;\r\n        }\r\n\r\n        if (this.props.loading) {\r\n            formElements = <Spinner />\r\n        }\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {console.log(\"hello2\")}\r\n                {console.log(this.props.isAuthenticated)}\r\n                {this.props.isAuthenticated ? <Redirect to={this.props.authRedirectPath}/> : null} \r\n                <form onSubmit={this.submitHandler}>\r\n                    {errorMessage}\r\n                    {formElements}\r\n                    <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n                <Button clicked={this.switchAuthModeHandler} btnType=\"Danger\">SWITCH TO {this.state.isSignup ? \"SIGN IN\" : \"SIGN UP\"}</Button>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.tokenId !== null,\r\n        building: state.burger.building,\r\n        authRedirectPath: state.auth.authRedirectPath,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        authHandler: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\r\n        setAuthRedirectPathHandler: () => dispatch(actions.setAuthRedirectPath(\"/\")),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.logoutHandler();\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to=\"/\" />\r\n        \r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToprops = dispatch => {\r\n    return {\r\n        logoutHandler: () => dispatch(actions.logout()),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToprops)(Logout);","import React, { Component } from 'react';\nimport Layout from \"./hoc/Layout/Layout\"\n// import BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Orders from \"./containers/Orders/Orders\";\nimport Auth from \"./containers/Auth/Auth\";\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./store/actions/index\";\nimport asyncComponent from \"./hoc/asyncComponent/asyncComponent\";\n\nconst AsyncBurgerBuilder = asyncComponent(() => {\n  return import(\"./containers/BurgerBuilder/BurgerBuilder\");\n})\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.authSetStateHandler();\n  }\n\n  render() {\n\n    let routes = (\n      <Switch> \n        <Route path=\"/auth\" component={Auth}/>\n        <Route path=\"/\" exact component={AsyncBurgerBuilder}/>\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>  \n            <Route path=\"/auth\" component={Auth}/>\n            <Route path=\"/checkout\" component={Checkout}/>\n            <Route path=\"/orders\" component={Orders}/> \n            <Route path=\"/logout\" component={Logout}/>\n            <Route path=\"/\" exact component={AsyncBurgerBuilder}/>\n            <Redirect to=\"/\" />\n          </Switch>\n      )\n    }\n    return (\n      <div>\n        <Layout style={{textAlign: \"center\"}}>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n  \n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.tokenId !== null,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authSetStateHandler: () => dispatch(actions.authSetState()),\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","import React, { Component } from \"react\";\r\n\r\nconst asyncComponent = (importComponent) => {\r\n    return class extends Component {\r\n\r\n        state =  {\r\n            component: null,\r\n        }\r\n\r\n        componentDidMount() {\r\n            importComponent()\r\n                .then(cmp => {\r\n                    this.setState({component: cmp.default})\r\n                });\r\n\r\n        }\r\n        render() {\r\n            const C = this.state.component;\r\n\r\n            return C ? <C {...this.props} /> : null;\r\n            \r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default asyncComponent;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldState, changedProperties) => {\r\n    return {\r\n        ...oldState,\r\n        ...changedProperties\r\n    }\r\n}","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: null,\r\n    building: false,\r\n}\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = { [action.payload.ingredient]: state.ingredients[action.payload.ingredient] + 1};\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = updateObject(state, {ingredients: updatedIngredients, building: true})\r\n    return (updateObject(updatedState, {\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.payload.ingredient],\r\n    }))\r\n}\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = { [action.payload.ingredient]: state.ingredients[action.payload.ingredient] - 1};\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n    const updatedSt = updateObject(state, {ingredients: updatedIngs, building: true})\r\n    return (updateObject(updatedSt, {\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.payload.ingredient],\r\n    }))\r\n}\r\n\r\nconst setIngredients = (state, action) => {\r\n    let newPrice = 4;\r\n\r\n    for (let ingredient in action.ingredients) {\r\n        newPrice+=INGREDIENT_PRICES[ingredient]*action.ingredients[ingredient];\r\n    }\r\n\r\n    return updateObject(state, {\r\n        ingredients: action.ingredients,\r\n        totalPrice: newPrice,\r\n        error: false,\r\n        building: false,\r\n        \r\n    })\r\n}\r\n\r\nconst burgerReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENT: return setIngredients(state, action);\r\n        case actionTypes.SET_ERROR: return updateObject(state, {error: action.error});\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default burgerReducer;","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    donePurchase: false,\r\n}\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, {donePurchase: false})\r\n}\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrder = {\r\n        ...action.orderData,\r\n        id: action.orderId,\r\n        \r\n    }\r\n\r\n    console.log(state.orders.concat(newOrder));\r\n\r\n    return updateObject(state, {\r\n        loading: false,\r\n        orders: state.orders.concat(newOrder),\r\n        donePurchase: true,\r\n    })\r\n}\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n    return updateObject(state, {loading: false})\r\n}\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, {loading: true})\r\n}\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, {loading: true})\r\n}\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n    return updateObject(state, {loading: false, error: action.error})\r\n}\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state, {loading: false, orders: action.orders})\r\n}\r\n\r\nconst orderReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n       \r\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\r\n           \r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\r\n            \r\n            \r\n            \r\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action);\r\n            \r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\r\n           \r\n\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action);\r\n            \r\n\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action);\r\n            \r\n\r\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action);\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default orderReducer;","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    tokenId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: \"/\",\r\n}\r\n\r\nconst authStart = (state , action) => {\r\n    return updateObject(state, {error: null, loading: true});\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        userId: action.userId,\r\n        tokenId: action.tokenId,\r\n        error: null,\r\n        loading: false,\r\n    })\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        userId: null,\r\n        tokenId: null,\r\n        error: action.error,\r\n        loading: false\r\n    })\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {userId: null, tokenId: null});\r\n}\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, {authRedirectPath: action.path})\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action)\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport burgerReducer from \"./store/reducers/burgerBuilders\";\nimport orderReducer from \"./store/reducers/order\";\nimport authReducer from \"./store/reducers/auth\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  burger: burgerReducer,\n  order: orderReducer,\n  auth: authReducer,\n}) \n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}